const VueLoaderPlugin = require('vue-loader/lib/plugin')
const nodeExternals = require('webpack-node-externals')
const isTest = process.env.NODE_ENV === 'test'

module.exports = {
  module: {
    rules: [
      // Istanbul for code coverage
      isTest ? {
        enforce: 'post',
        test: /\.vue$/,
        include: /src\/components\/*.vue$/,
        loader: 'istanbul-instrumenter-loader',
        query: {
          debug: true,
          preserveComments: true,
          esModules: true
        }
      } : {},
      // Vue loader
      {
        test: /\.vue$/,
        exclude: /node_modules/,
        loader: 'vue-loader'
      },
      // ES6 loader
      {
        test: /\.js$/,
        loader: 'babel-loader',
        exclude: /node_modules/
      },
      // Styles loader
      {
        test: /\.(less|css)$/,
        loaders: ['style-loader', 'css-loader', 'less-loader']
      },
      // Fonts loader
      {
        test: /\.(ttf|eot|woff|woff2)$/,
        use: {
          loader: 'file-loader',
          options: {
            name: 'fonts/[name].[ext]'
          }
        }
      },
      // Assets loader
      {
        test: /\.(png|jpg|gif|svg)$/,
        loader: 'file-loader'
      }
    ]
  },
  plugins: [
    // add vue-loader plugin
    new VueLoaderPlugin()
  ],
  externals: [
    nodeExternals()
  ],
  // devtool: 'inline-cheap-module-source-map',
  devtool: 'eval',
  output: {
    // ...
    // use absolute paths in sourcemaps (important for debugging via IDE)
    devtoolModuleFilenameTemplate: '[absolute-resource-path]',
    devtoolFallbackModuleFilenameTemplate: '[absolute-resource-path]?[hash]'
  }
}
