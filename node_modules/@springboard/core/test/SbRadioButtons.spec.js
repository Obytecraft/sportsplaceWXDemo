import chai from 'chai'
import { shallowMount } from '@vue/test-utils'

import { SbRadioButtons } from '../src/components'

chai.should()
chai.use(require('chai-things'))

const LABEL = 'Hello World!'
const CHOICES = [
  {
    label: 'Test 1',
    value: 1
  },
  {
    label: 'Test 2',
    value: 2
  },
  {
    label: 'Test 42',
    value: 42
  }
]

describe('SbRadioButtons.vue', () => {
  it('Should_HaveHelloWorldContent_When_LabelIsSetToHelloWorld', () => {
    const wrapper = shallowMount(SbRadioButtons, {
      propsData: {
        choices: CHOICES,
        label: LABEL
      }
    })

    wrapper.contains('.radiofield-label').should.be.true
    wrapper.find('.radiofield-label').text().should.be.equal(LABEL)
  })

  it('Should_ThreeCheckbox_When_AnArrayOfThreeValueIsGiven', () => {
    const wrapper = shallowMount(SbRadioButtons, {
      propsData: {
        choices: CHOICES
      }
    })

    const buttonWrappers = wrapper.findAll('.radiofield-button')
    buttonWrappers.length.should.be.equal(3)

    const thrirdButtonWrapper = buttonWrappers.at(2)
    thrirdButtonWrapper.find('.radiofield-button-label').text().should.be.equal(CHOICES[2].label)
    thrirdButtonWrapper.find('.radiofield-button-input').element.value.should.be.equal('' + CHOICES[2].value)
  })

  it('Should_SecondCheckboxBeChecked_When_ValueIsTwo', () => {
    const wrapper = shallowMount(SbRadioButtons, {
      propsData: {
        choices: CHOICES,
        value: 2
      }
    })

    const inputWrappers = wrapper.findAll('.radiofield-button-input')
    inputWrappers.at(0).element.checked.should.be.false
    inputWrappers.at(1).element.checked.should.be.true
    inputWrappers.at(2).element.checked.should.be.false
  })

  it('Should_AllCheckedBoxesBeDisabled_When_DisabledIsTrue', () => {
    const wrapper = shallowMount(SbRadioButtons, {
      propsData: {
        choices: CHOICES,
        disabled: true
      }
    })

    wrapper.find('.radiofield-buttons').classes().should.contains('disabled')

    const inputWrappers = wrapper.findAll('.radiofield-button-input')
    inputWrappers.at(0).element.disabled.should.be.true
    inputWrappers.at(1).element.disabled.should.be.true
    inputWrappers.at(2).element.disabled.should.be.true
  })
})
