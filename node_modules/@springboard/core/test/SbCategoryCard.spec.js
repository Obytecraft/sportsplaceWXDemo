import 'chai/register-should'
import { mount } from '@vue/test-utils'

import { SbCategoryCard } from '../src/components'

const CARD_TITLE = 'Hello World!'
const CARD_IMAGE_URL = 'dummy.io'
const CARD_URL = 'https://thecatapi.com/'

describe('SbCategoryCard.vue', () => {
  it('Should_HaveHelloWorldContent_When_TitleIsSetToHelloWorld', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL
      }
    })

    wrapper.contains('.card-category__title').should.be.true
    wrapper.find('.card-category__title').text().should.be.equal(CARD_TITLE)
  })

  it('Should_HavH1TitleTag_When_TagTitleIsSetToH1', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        tag: {
          title: 'h1'
        }
      }
    })

    wrapper.find('.card-category__title').is('h1').should.be.true
  })

  it('Should_HavPContainerTag_When_TagContainerIsSetToP', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        tag: {
          container: 'p'
        }
      }
    })

    wrapper.contains('.card-category__container > .card-category').should.be.true
    wrapper.find('.card-category').is('p').should.be.true
  })

  it('Should_HaveBackgroundImage_When_ImageIsSet', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL
      }
    })

    wrapper.find('.card-category').attributes('style').should.be.equal(`background-image: url(${CARD_IMAGE_URL});`)
  })

  it('Should_HaveHrefAttributEqualToTheCatApiDotCom_When_UrlIsSetToToTheCatApiDotCom', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        url: CARD_URL
      }
    })

    wrapper.find('.card-category').attributes('href').should.be.equal(CARD_URL)
  })

  it('Should_BackgroundColorBeRed_When_ColorIsSetToRed', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        color: 'red'
      }
    })

    wrapper.contains('.overlay').should.be.true
    wrapper.find('.overlay').attributes('style').should.be.equal('background-color: red;')
  })

  /**
   * This should work, but for an obscure reason style attribute in `undefined`.
   * This posibly come from a lack of support of `linear-gradient` from JSDom engine, but nothing sure about it...
   * @see https://github.com/jsdom/jsdom/issues/2166
   */
  xit('Should_BackgroundColorBeGradient_When_ColorValueIsAnArray', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        color: ['#000000', '#FFFFFF']
      }
    })

    wrapper.contains('.overlay').should.be.true
    wrapper.find('.overlay').attributes('style').should.be.equal('background-image: linear-gradient(45deg, #000000 0%, #FFFFFF 100%);')
  })

  // we directly test the computed value to avoid previous issue
  it('Should_cssColorReturnBackgroundColorGradient_When_ColorValueIsAnArray', () => {
    const wrapper = mount(SbCategoryCard, {
      propsData: {
        title: CARD_TITLE,
        image: CARD_IMAGE_URL,
        color: ['#000000', '#FFFFFF']
      }
    })

    wrapper.vm.cssColor.should.be.equal('background-image: linear-gradient(45deg, #000000 0%, #FFFFFF 100%);')
  })
})
