import 'chai/register-should'
import { mount } from '@vue/test-utils'

import { SbButton } from '../src/components'

const BUTTON_LABEL = 'Hello World!'

describe('SbButton.vue', () => {
  it('Should_EmitClickEvent_When_ButtonIsClicked', () => {
    const wrapper = mount(SbButton)

    wrapper.find('button').trigger('click')

    wrapper.emitted().click.should.exist
  })

  it('Should_HaveHelloWorldContent_When_LabelIsSetToHelloWorld', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        label: BUTTON_LABEL
      }
    })

    wrapper.contains('.sb-button-label').should.be.true
    wrapper.find('.sb-button-label').text().should.be.equal(BUTTON_LABEL)
  })

  it('Should_HaveIconRightMailIcon_When_IconNameIsSetToMail', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        iconName: 'mail'
      }
    })

    wrapper.contains('.icon.icon-left').should.be.false

    wrapper.contains('.icon.icon-right').should.be.true
    wrapper.find('.icon.icon-right').classes().should.contain('icon-mail')
  })

  it('Should_HaveIconLeftMailIcon_When_IconNameIsSetToMailAndIconLeftIsSetToTrue', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        iconName: 'mail',
        iconLeft: true
      }
    })

    wrapper.contains('.icon.icon-right').should.be.false

    wrapper.classes().should.contain('icon-left')

    wrapper.contains('.icon.icon-left').should.be.true
    wrapper.find('.icon.icon-left').classes().should.contain('icon-mail')
  })

  it('Should_HaveSmallClass_When_SmallIsSetToTrue', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        small: true
      }
    })

    wrapper.classes().should.contain('small')
  })

  it('Should_HaveOutlineClass_When_OutlineIsSetToTrue', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        outline: true
      }
    })

    wrapper.classes().should.contain('outline')
  })

  it('Should_ButtonTypeBeSubmit_When_TypeIsSetToSubmit', () => {
    const wrapper = mount(SbButton, {
      propsData: {
        type: 'submit'
      }
    })

    wrapper.attributes('type').should.be.equal('submit')
  })
})
